#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/ddbm
#spring.datasource.username=root
#spring.datasource.password=123456

spring.shardingsphere.props.sql.show=true

spring.shardingsphere.datasource.names=ds0,ds1,ds0slv0,ds0slv1,ds1slv0,ds1slv1

spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3307/ds0
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3307/ds1
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

spring.shardingsphere.datasource.ds0slv0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0slv0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0slv0.url=jdbc:mysql://localhost:3308/ds0
spring.shardingsphere.datasource.ds0slv0.username=root
spring.shardingsphere.datasource.ds0slv0.password=123456

spring.shardingsphere.datasource.ds0slv1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0slv1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0slv1.url=jdbc:mysql://localhost:3309/ds0
spring.shardingsphere.datasource.ds0slv1.username=root
spring.shardingsphere.datasource.ds0slv1.password=123456

spring.shardingsphere.datasource.ds1slv0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1slv0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1slv0.url=jdbc:mysql://localhost:3308/ds1
spring.shardingsphere.datasource.ds1slv0.username=root
spring.shardingsphere.datasource.ds1slv0.password=123456

spring.shardingsphere.datasource.ds1slv1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1slv1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1slv1.url=jdbc:mysql://localhost:3309/ds1
spring.shardingsphere.datasource.ds1slv1.username=root
spring.shardingsphere.datasource.ds1slv1.password=123456

# read and write in respective db
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=ds0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=ds0slv0, ds0slv1
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=ds1
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=ds1slv0, ds1slv1

# database strategy
spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression=ds$->{id % 2}
# table strategy is not necessary

# key generator
spring.shardingsphere.sharding.tables.user.key-generator.column=id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE

# database strategy
spring.shardingsphere.sharding.tables.available_rec.database-strategy.inline.sharding-column=owner_id
spring.shardingsphere.sharding.tables.available_rec.database-strategy.inline.algorithm-expression=ds$->{owner_id % 2}
# table strategy
spring.shardingsphere.sharding.tables.available_rec.actual-data-nodes=ds$->{0..1}.available_rec$->{0..1}
spring.shardingsphere.sharding.tables.available_rec.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.available_rec.table-strategy.inline.algorithm-expression=available_rec$->{id % 2}
# key generator
spring.shardingsphere.sharding.tables.available_rec.key-generator.column=id
spring.shardingsphere.sharding.tables.available_rec.key-generator.type=SNOWFLAKE


spring.shardingsphere.sharding.binding-tables=user,available_rec
spring.shardingsphere.sharding.broadcast-tables=rec_registry